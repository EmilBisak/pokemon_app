{"version":3,"sources":["store/index.js","shared/animationStyle.js","components/Footer.js","components/Header.js","components/SinglePokemon.js","components/Buttons.js","components/Pokemons.js","components/Main.js","App.js","serviceWorker.js","index.js"],"names":["initialState","pokemons","filtered","singlePokemon","loading","isClicked","pokemonsPerPage","min","max","openBallStyles","transition","minHeight","closeBallStyles","openPokemonStyle","visibility","opacity","margin","closePokemonStyle","padding","height","showPokemonDetails","border","hidePokemonDetails","showBtn","display","hideBtn","Footer","react_default","a","createElement","style","this","props","Component","connect","state","Header","_this$props","clicked","className","Link","to","transform","onClick","animation","mapDispatchToProps","type","SinglePokemon","isClickedStat","isClickedMove","toggle","imgUrl","showHide","e","element","nativeEvent","path","getAttribute","_this","setState","Object","defineProperty","console","log","_this2","_this$state","pokemonImages","images","img","sprites","hasOwnProperty","push","filter","grabPokemonImages","typeJsx","types","map","i","key","name","title","src","concat","alt","statsJsx","stats","stat","base_stat","movesJsx","moves","move","moveName","length","onMouseOver","onMouseOut","datatype","objectSpread","gridTemplateColumns","weight","Buttons","changePage","previousPage","nextPage","numsOfPages","Math","ceil","pokemon_species","results","makeButtons","buttonsJsx","_loop","index","nextMin","nextMax","isWindowTabletSize","window","innerWidth","otherPage","currentPage","backgroundColor","showBtns","numberBtns","btn","nextTenPagesMin","nextTenPagesMax","previousTenPagesMin","previousTenPagesMax","nextText","previousText","Pokemons","fetchSinglePokemon","fetchPokemonsByColor","showAllPokemons","pokemonsJsx","pokemon","url","split","pathname","colorBtnsJsx","forEach","color","background","makeColorBtns","components_Buttons","id","dispatch","fetch","then","res","json","catch","Main","Switch","Route","exact","component","root","document","querySelector","App","fetchPokemons","overflow","src_components_Header","components_Main","src_components_Footer","withRouter","Boolean","location","hostname","match","store","createStore","arguments","undefined","action","applyMiddleware","thunk","subscribe","getState","ReactDOM","render","es","HashRouter","src_App_0","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.75cbe45b.chunk.js","sourcesContent":["const initialState = {\r\n    pokemons: '',\r\n    filtered: null,\r\n    singlePokemon: '',\r\n    loading: true,\r\n    isClicked: false,\r\n    pokemonsPerPage: 30,\r\n    min: 0,\r\n    max: 30\r\n};\r\n\r\nexport const reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case 'SET_POKEMONS':\r\n            return { ...state, pokemons: action.pokemons }\r\n\r\n        case 'SET_POKEMONS_BY_COLOR':\r\n            return { ...state, filtered: action.filtered, min: 0, max: 30 }\r\n\r\n        case 'SHOW_ALL_POKEMON':\r\n            return { ...state, filtered: null, min: 0, max: 30 }\r\n\r\n        case 'SET_SINGLE_POKEMON':\r\n            return { ...state, singlePokemon: action.pokemon }\r\n\r\n        case 'FETCH_START':\r\n            return { ...state, loading: true }\r\n\r\n        case 'FETCH_SUCCESS':\r\n            return { ...state, loading: false }\r\n\r\n        case 'FETCH_FAIL':\r\n            return { ...state, loading: true }\r\n\r\n        case 'CLICKED':\r\n            return { ...state, isClicked: !state.isClicked }\r\n\r\n        case 'CHANGE_PAGE':\r\n            return { ...state, min: action.min, max: action.max }\r\n\r\n        case 'PREVIOUS_PAGE':\r\n            return { ...state, min: state.min - 30, max: state.max - 30 }\r\n\r\n        case 'NEXT_PAGE':\r\n            return { ...state, min: state.min + 30, max: state.max + 30 }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const setPokemons = pokemons => ({\r\n    type: 'SET_POKEMONS',\r\n    pokemons,\r\n    filtered: pokemons\r\n})\r\n\r\nexport const setPokemonsByColor = filtered => ({\r\n    type: 'SET_POKEMONS_BY_COLOR',\r\n    filtered\r\n})\r\n\r\nexport const showAllPokemons = filtered => ({\r\n    type: 'SHOW_ALL_POKEMON',\r\n})\r\n\r\nexport const setSinglePokemon = pokemon => ({\r\n    type: 'SET_SINGLE_POKEMON',\r\n    pokemon\r\n})\r\n\r\nexport const fetchStart = () => ({\r\n    type: 'FETCH_START'\r\n})\r\n\r\nexport const fetchSuccess = () => ({\r\n    type: 'FETCH_SUCCESS'\r\n})\r\n\r\nexport const fetchFail = () => ({\r\n    type: 'FETCH_FAIL'\r\n})\r\n\r\nexport const clicked = () => ({\r\n    type: 'CLICKED'\r\n})\r\n\r\nexport const changePage = (min, max) => ({\r\n    type: 'CHANGE_PAGE',\r\n    min,\r\n    max\r\n})\r\n\r\nexport const previousPage = () => ({\r\n    type: 'PREVIOUS_PAGE'\r\n})\r\n\r\nexport const nextPage = () => ({\r\n    type: 'NEXT_PAGE'\r\n})\r\n\r\nexport const fetchPokemons = () => dispatch => {\r\n    dispatch(fetchStart());\r\n    return fetch(\"https://pokeapi.co/api/v2/pokemon/\")\r\n        .then(res => res.json())\r\n        .then(json => {\r\n            dispatch(fetchSuccess())\r\n            dispatch(setPokemons(json))\r\n        })\r\n        .catch(e => dispatch(fetchFail(e)))\r\n}\r\n\r\nexport const fetchSinglePokemon = (id) => dispatch => {\r\n    dispatch(fetchStart());\r\n    return fetch(`https://cors-anywhere.herokuapp.com/https://pokeapi.co/api/v2/pokemon/${id}`)\r\n        .then(res => res.json())\r\n        .then(json => {\r\n            dispatch(fetchSuccess())\r\n            dispatch(setSinglePokemon(json))\r\n        })\r\n        .catch(e => dispatch(fetchFail(e)))\r\n}\r\n\r\nexport const fetchPokemonsByColor = (id) => dispatch => {\r\n    dispatch(fetchStart());\r\n    return fetch(`https://cors-anywhere.herokuapp.com/https://pokeapi.co/api/v2/pokemon-color/${id}/`)\r\n        .then(res => res.json())\r\n        .then(json => {\r\n            dispatch(fetchSuccess())\r\n            dispatch(setPokemonsByColor(json))\r\n\r\n        })\r\n        .catch(e => dispatch(fetchFail(e)))\r\n}\r\n","export const openBallStyles = {\r\n    transition: \"all 1s\",\r\n    minHeight: \"15vh\",\r\n}\r\n\r\nexport const closeBallStyles = {\r\n    transition: \"all 1s\",\r\n    minHeight: \"calc(50vh - 10px)\",\r\n}\r\n\r\nexport const openPokemonStyle = {\r\n    visibility: 'visible',\r\n    opacity: '1',\r\n    transition: 'visibility 0s linear 0s, opacity 300ms',\r\n    margin: '60px auto',\r\n}\r\n\r\nexport const closePokemonStyle = {\r\n    visibility: 'hidden',\r\n    opacity: '0',\r\n    transition: 'visibility 0s linear 500ms, opacity 300ms',\r\n    margin: '0',\r\n    padding: '0',\r\n    height: '0'\r\n}\r\n\r\nexport const showPokemonDetails = {\r\n    border: '1px solid #000',\r\n    padding: '20px',\r\n    margin: '0 20px',\r\n}\r\n\r\nexport const hidePokemonDetails = {\r\n    border: 'none',\r\n    padding: '0',\r\n    margin: '0',\r\n}\r\n\r\nexport const showBtn = {\r\n    display: \"inline-block\"\r\n}\r\n\r\nexport const hideBtn = {\r\n    display: \"none\"\r\n}","import React, { Component } from 'react';\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { openBallStyles, closeBallStyles  } from \"../shared/animationStyle\";\r\nimport \"./Footer.css\"\r\n\r\nclass Footer extends Component {\r\n    render() {\r\n        return (\r\n            <footer style={this.props.isClicked ? openBallStyles : closeBallStyles}>\r\n                <small style={this.props.isClicked ? { display: \"block\" } : { display: \"none\" }}>Copyright &copy; Emil Bisak 2018</small>\r\n            </footer>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        isClicked: state.isClicked\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Footer);","import React, { Component } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { clicked } from \"../store/index\";\r\nimport './Header.css';\r\nimport { openBallStyles, closeBallStyles } from \"../shared/animationStyle\"\r\n\r\nclass Header extends Component {\r\n    render() {\r\n        const { isClicked, clicked } = this.props\r\n        return (\r\n            <header className=\"App-header\" style={isClicked ? openBallStyles : closeBallStyles}>\r\n                <Link to=\"/\">\r\n                    <h1 style={isClicked ? { transform: 'translateX(96%)' } : { transform: 'translateX(-50%)' }}>Pokemon App</h1>\r\n                </Link>\r\n                <div onClick={clicked} className=\"logo\" style={isClicked ? { animation: 'none' } : { animation: 'shadow-pulse 1.4s infinite' }}></div>\r\n            </header>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        isClicked: state.isClicked\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    clicked\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Header);","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from \"react-redux\";\r\n\r\nimport './SinglePokemon.css'\r\nimport { showPokemonDetails, hidePokemonDetails, openPokemonStyle, closePokemonStyle } from '../shared/animationStyle'\r\n\r\nclass SinglePokemon extends Component {\r\n\r\n    state = {\r\n        isClickedStat: false,\r\n        isClickedMove: false,\r\n        toggle: false,\r\n        imgUrl: 1,\r\n    }\r\n\r\n    showHide = (e) => {\r\n        let element = e.nativeEvent.path[0].getAttribute('datatype');\r\n\r\n        switch (element) {\r\n            case 'isClickedStat':\r\n                this.setState({ [element]: !this.state.isClickedStat })\r\n                break;\r\n            case 'isClickedMove':\r\n                this.setState({ [element]: !this.state.isClickedMove })\r\n                break;\r\n\r\n            default:\r\n                console.log(this.state);\r\n\r\n        }\r\n\r\n\r\n    }\r\n    render() {\r\n        const { isClicked, singlePokemon } = this.props;\r\n        const { isClickedMove, isClickedStat } = this.state;\r\n\r\n        if (!singlePokemon) {\r\n            return <div className=\"wrapp single-pokemon\" style={isClicked ? { minHeight: 'calc(60vh)' } : { minHeight: '0' }}>\r\n                <div className=\"container single-pokemon\" style={isClicked ? openPokemonStyle : closePokemonStyle}>\r\n                    <Link to=\"/\"><h1>Select pokemon</h1></Link>\r\n                </div>\r\n            </div>\r\n        }\r\n\r\n        const grabPokemonImages = () => {\r\n            let images = [];\r\n            for (let img in singlePokemon.sprites) {\r\n                if (singlePokemon.sprites.hasOwnProperty(img)) {\r\n                    if (img === \"front_default\" || img === \"back_default\")\r\n                        images.push(singlePokemon.sprites[img]);\r\n                }\r\n            }\r\n            images = images.filter(img => img !== null);\r\n            return images\r\n        }\r\n\r\n        let pokemonImages = grabPokemonImages();\r\n\r\n        const changeImgBc = () => {\r\n            this.setState({ imgUrl: 0 })\r\n        }\r\n        const changeImgFr = () => {\r\n            pokemonImages.length > 0 ? this.setState({ imgUrl: 1 }) : this.setState({ imgUrl: 0 })\r\n        }\r\n\r\n        const typeJsx = singlePokemon.types.map((type, i) => {\r\n            return <img key={type.type.name + i} title={type.type.name} src={`assets/types/${type.type.name}.png`} alt=\"type\" className=\"pokemon-types\" />\r\n        })\r\n\r\n        const statsJsx = singlePokemon.stats.map(stat => {\r\n            return <p key={stat.stat.name}><span>{stat.stat.name}: {stat.base_stat}</span></p>\r\n        })\r\n\r\n        const movesJsx = singlePokemon.moves.map(move => {\r\n            let moveName = move.move.name\r\n            return <small key={moveName}>{moveName}, </small>\r\n        })\r\n\r\n        return (\r\n            <div className=\"wrapp single-pokemon\" style={isClicked ? { minHeight: 'calc(60vh)' } : { minHeight: '0' }}>\r\n                <div className=\"container single-pokemon\" style={isClicked ? openPokemonStyle : closePokemonStyle}>\r\n                    <h1>{singlePokemon.name}</h1>\r\n                    <div className=\"pokemon-image-holder\">\r\n                        <img src={pokemonImages.length > 1 ? pokemonImages[this.state.imgUrl] : pokemonImages} onMouseOver={changeImgBc} onMouseOut={changeImgFr} alt=\"sprite\" />\r\n                        <div>\r\n                            <h4>Type</h4>\r\n                            {typeJsx}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"pokemon-stats\">\r\n                        <h2 datatype=\"isClickedStat\" onClick={this.showHide}>Stats</h2>\r\n                        <div className=\"pokemon-stats-holder\" style={isClickedStat ? { ...showPokemonDetails, gridTemplateColumns: '1fr 1fr' } : hidePokemonDetails}>\r\n                            <p>Height : {singlePokemon.height}</p>\r\n                            <p>Weight : {singlePokemon.weight}</p>\r\n                            {isClickedStat ? statsJsx : null}\r\n                        </div>\r\n                    </div>\r\n                    <h2 datatype=\"isClickedMove\" onClick={this.showHide}>moves</h2>\r\n                    <div className=\"pokemon-moves-holder\" style={isClickedMove ? showPokemonDetails : hidePokemonDetails}>\r\n                        {isClickedMove ? movesJsx : null}\r\n                    </div>\r\n                    <Link to=\"/\"><h3>Back</h3></Link>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        isClicked: state.isClicked,\r\n        singlePokemon: state.singlePokemon\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(SinglePokemon);","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport './Pokemons.css';\r\nimport { openPokemonStyle, closePokemonStyle, showBtn, hideBtn } from \"../shared/animationStyle\";\r\nimport { changePage, previousPage, nextPage } from \"../store/index\";\r\n\r\n\r\nclass Buttons extends Component {\r\n\r\n    render() {\r\n        const { pokemons, filtered, isClicked, pokemonsPerPage, min, max, changePage, previousPage, nextPage } = this.props\r\n        const numsOfPages = Math.ceil((filtered ? filtered.pokemon_species.length : pokemons.results.length) / pokemonsPerPage);\r\n\r\n        const makeButtons = () => {\r\n            const buttonsJsx = [];\r\n            for (let index = 1; index < numsOfPages; index++) {\r\n                let nextMin = (index - 1) * pokemonsPerPage;\r\n                let nextMax = index * pokemonsPerPage;\r\n                let isWindowTabletSize = window.innerWidth < 600;\r\n                let otherPage = nextMin !== min;\r\n                let currentPage = nextMin === min;\r\n                buttonsJsx.push(<span className={isWindowTabletSize && otherPage ? \"pagination-btns hide\" : \"pagination-btns\"} key={nextMin} onClick={() => changePage(nextMin, nextMax)} style={currentPage ? { backgroundColor: \"#ffb6b6\" } : { backgroundColor: \"#fff\" }}>{index}</span>)\r\n\r\n            }\r\n            return buttonsJsx;\r\n        }\r\n\r\n        const showBtns = () => {\r\n            let btns = {};\r\n            if (min < 300) {\r\n                btns = {\r\n                    numberBtns: makeButtons().filter((btn, i) => i <= 9),\r\n                    nextTenPagesMin: 300,\r\n                    nextTenPagesMax: 330,\r\n                    previousTenPagesMin: min,\r\n                    previousTenPagesMax: max,\r\n                    nextText: \"11-19 \",\r\n                    previousText: \"\"\r\n                }\r\n                return btns\r\n            } else if (min >= 300 && min < 570) {\r\n                btns = {\r\n                    numberBtns: makeButtons().filter((btn, i) => i > 9 && i < 19),\r\n                    nextTenPagesMin: 570,\r\n                    nextTenPagesMax: 600,\r\n                    previousTenPagesMin: 0,\r\n                    previousTenPagesMax: 30,\r\n                    nextText: \"20-29 \",\r\n                    previousText: \" 1-10\"\r\n                }\r\n                return btns\r\n            } else if (min >= 570 && min < 870) {\r\n                btns = {\r\n                    numberBtns: makeButtons().filter((btn, i) => i >= 19 && i < 29),\r\n                    nextTenPagesMin: 870,\r\n                    nextTenPagesMax: 900,\r\n                    previousTenPagesMin: 300,\r\n                    previousTenPagesMax: 330,\r\n                    nextText: \"30-31 \",\r\n                    previousText: \" 11-19\"\r\n                }\r\n                return btns\r\n            } else {\r\n                btns = {\r\n                    numberBtns: makeButtons().filter((btn, i) => i >= 29),\r\n                    nextTenPagesMin: 900,\r\n                    nextTenPagesMax: 930,\r\n                    previousTenPagesMin: 570,\r\n                    previousTenPagesMax: 600,\r\n                    nextText: \"\",\r\n                    previousText: \" 20-29\"\r\n                }\r\n                return btns\r\n            }\r\n        }\r\n\r\n        return (\r\n            <div className=\"buttons-holder\" style={isClicked ? openPokemonStyle : closePokemonStyle}>\r\n                <span\r\n                    className=\"pagination-btns change-ten-pages\"\r\n                    onClick={() => changePage(showBtns().previousTenPagesMin, showBtns().previousTenPagesMax)}\r\n                    style={!showBtns().previousText ? hideBtn : showBtn}>&#171;{showBtns().previousText}\r\n                </span>\r\n                <span className=\"pagination-btns\" onClick={previousPage} style={!min ? hideBtn : showBtn}>&#171;</span>\r\n                {showBtns().numberBtns}\r\n                <span className=\"pagination-btns\" onClick={nextPage} style={max === 930 ? hideBtn : showBtn}>&#187;</span>\r\n                <span\r\n                    className=\"pagination-btns change-ten-pages\"\r\n                    onClick={() => changePage(showBtns().nextTenPagesMin, showBtns().nextTenPagesMax)}\r\n                    style={!showBtns().nextText || (filtered ? filtered.pokemon_species.length : pokemons.results.length) < 300 ? hideBtn : showBtn}>{showBtns().nextText}&#187;\r\n                </span>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        isClicked: state.isClicked,\r\n        pokemons: state.pokemons,\r\n        filtered: state.filtered,\r\n        pokemonsPerPage: state.pokemonsPerPage,\r\n        min: state.min,\r\n        max: state.max\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    changePage,\r\n    previousPage,\r\n    nextPage\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Buttons);","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport './Pokemons.css';\r\nimport { openPokemonStyle, closePokemonStyle, showBtn, hideBtn } from \"../shared/animationStyle\";\r\nimport { fetchSinglePokemon, fetchPokemonsByColor, showAllPokemons } from \"../store/index\";\r\nimport Buttons from \"./Buttons\";\r\n\r\n\r\n\r\n\r\nclass Pokemons extends Component {\r\n\r\n    render() {\r\n\r\n        const { pokemons, filtered, isClicked, min, max, fetchSinglePokemon, fetchPokemonsByColor, showAllPokemons } = this.props\r\n        if (!pokemons) {\r\n            return null\r\n        }\r\n\r\n        const makeColorBtns = () => {\r\n        const pokemonColors = [null, \"black\", \"blue\", \"brown\", \"gray\", \"green\", \"pink\", \"purple\", \"red\", \"white\", \"yellow\"]\r\n        let colorBtnsJsx = []\r\n\r\n        pokemonColors.forEach((color, i) => {\r\n            if (color) {\r\n                colorBtnsJsx.push(<span key={color} className=\"color-btns\" style={{ background: `${color}` }} onClick={() => fetchPokemonsByColor(i)}></span>)\r\n            }\r\n        })\r\n\r\n        return colorBtnsJsx;\r\n    }\r\n\r\n\r\n\r\n\r\n        const pokemonsJsx = filtered\r\n            ?\r\n            filtered.pokemon_species\r\n                .filter((pokemon, i) => i >= min && i < max)\r\n                .map((pokemon, i) => (\r\n                    <Link key={pokemon.url.split(\"/\")[6]} to={{ pathname: `/pokemon/${pokemon.name}` }}>\r\n                        <div onClick={() => fetchSinglePokemon(pokemon.url.split(\"/\")[6])}>\r\n                            <h2>{pokemon.name}</h2>\r\n                            <img src={`assets/pokemon/${pokemon.url.split(\"/\")[6] < 10090 ? pokemon.url.split(\"/\")[6] : 'egg'}.png`} alt=\"pokemon\" />\r\n                        </div>\r\n                    </Link>\r\n                ))\r\n            :\r\n            pokemons.results\r\n                .filter((pokemon, i) => i >= min && i < max)\r\n                .map((pokemon, i) => (\r\n                    <Link key={pokemon.url.split(\"/\")[6]} to={{ pathname: `/pokemon/${pokemon.name}` }}>\r\n                        <div onClick={() => fetchSinglePokemon(pokemon.url.split(\"/\")[6])}>\r\n                            <h2>{pokemon.name}</h2>\r\n                            <img src={`assets/pokemon/${pokemon.url.split(\"/\")[6] < 10090 ? pokemon.url.split(\"/\")[6] : 'egg'}.png`} alt=\"pokemon\" />\r\n                        </div>\r\n                    </Link>\r\n                ))\r\n\r\n\r\n        return (\r\n            <div className=\"wrapp\" style={isClicked ? { minHeight: 'calc(140vh)' } : { minHeight: '0' }}>\r\n                <div className=\"container\">\r\n                    <div className=\"filter-by-color\" style={isClicked ? showBtn : hideBtn}>\r\n                        {makeColorBtns()}\r\n                        <div className=\"all-colors\" onClick={showAllPokemons}></div>\r\n                    </div>\r\n                    <div className=\"pokemon-holder\" style={isClicked ? openPokemonStyle : closePokemonStyle}>\r\n                        {pokemonsJsx}\r\n                    </div>\r\n                    <Buttons />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        pokemons: state.pokemons,\r\n        filtered: state.filtered,\r\n        loading: state.loading,\r\n        isClicked: state.isClicked,\r\n        min: state.min,\r\n        max: state.max\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    fetchSinglePokemon,\r\n    fetchPokemonsByColor,\r\n    showAllPokemons\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Pokemons);","import React from \"react\";\r\nimport { Switch, Route } from \"react-router-dom\";\r\nimport SinglePokemon from \"./SinglePokemon\";\r\nimport Pokemons from \"./Pokemons\";\r\n\r\n\r\nconst Main = () => (\r\n  <main>\r\n    <Switch>\r\n      <Route exact path=\"/\" component={Pokemons} />\r\n      <Route path=\"/pokemon/:name\" component={SinglePokemon} />\r\n    </Switch>\r\n  </main>\r\n);\r\n\r\nexport default Main;","import React, { Component } from 'react';\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router\";\n\nimport './App.css';\nimport { fetchPokemons } from \"./store/index\";\nimport Footer from './components/Footer';\nimport Header from './components/Header';\nimport Main from './components/Main';\n\nconst root = document.querySelector('#root');\n\n\nclass App extends Component {\n\n  componentDidMount() {\n    this.props.fetchPokemons();\n  }\n\n  render() {\n    this.props.isClicked ? root.style.overflow = 'unset' : root.style.overflow = 'hidden';\n    return (\n      <div className=\"App\">\n        <Header />\n        <Main />\n        <Footer />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    isClicked: state.isClicked\n  }\n}\n\nconst mapDispatchToProps = {\n  fetchPokemons\n};\n\nexport default\n  withRouter(connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(App))\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter as Router } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\n\nimport { reducer } from \"./store/index\";\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nconst store = createStore(reducer, applyMiddleware(thunk));\nstore.subscribe(() => console.log(store.getState()));\nReactDOM.render(\n    <Provider store={store}>\n        <Router>\n            <App />\n        </Router>\n    </Provider>\n\n    , document.getElementById('root'));\n\n\nserviceWorker.unregister();\n"],"sourceRoot":""}