{"version":3,"sources":["store/index.js","shared/animationStyle.js","components/Footer.js","components/Header.js","components/SinglePokemon.js","components/Buttons.js","components/Pokemons.js","components/Main.js","App.js","serviceWorker.js","index.js"],"names":["initialState","pokemons","filtered","singlePokemon","loading","isClicked","pokemonsPerPage","min","max","showHideFilter","fetchPokemons","offset","dispatch","type","fetch","concat","then","res","json","catch","e","openBallStyles","transition","minHeight","closeBallStyles","openPokemonStyle","visibility","opacity","margin","closePokemonStyle","padding","height","showPokemonDetails","hidePokemonDetails","border","showBtn","display","hideBtn","Footer","react_default","a","createElement","style","this","props","Component","connect","state","Header","_this$props","clicked","className","Link","to","onClick","length","replace","transform","animation","mapDispatchToProps","SinglePokemon","isClickedStat","isClickedMove","toggle","imgUrl","showHide","element","nativeEvent","path","getAttribute","_this","setState","Object","defineProperty","console","log","_this2","src","alt","pokemonImages","images","img","sprites","hasOwnProperty","push","filter","grabPokemonImages","matchPercentage","stat","name","base_stat","typeJsx","types","map","i","key","title","statsJsx","stats","width","movesJsx","moves","move","moveName","onMouseOver","onMouseOut","weight","datatype","Buttons","isWindowTabletSize","window","innerWidth","checkIsWindowTabletSize","addEventListener","removeEventListener","changePage","previousPage","nextPage","numsOfPages","Math","ceil","makeButtons","buttonsJsx","_loop","index","nextMin","nextMax","otherPage","currentPage","backgroundColor","color","showBtns","numberBtns","btn","nextTenPagesMin","nextTenPagesMax","previousTenPagesMin","previousTenPagesMax","nextText","previousText","Pokemons","fetchSinglePokemon","fetchPokemonsByColor","searchByName","pokemonsJsx","pokemon","url","split","pathname","placeholder","onChange","target","value","colorBtnsJsx","forEach","background","makeColorBtns","components_Buttons","id","letter","Main","Switch","Route","exact","component","root","document","querySelector","App","overflow","src_components_Header","components_Main","src_components_Footer","withRouter","Boolean","location","hostname","match","store","createStore","arguments","undefined","action","results","objectSpread","pokemonFilteredArr","pokemon_species","toConsumableArray","toLowerCase","includes","applyMiddleware","thunk","ReactDOM","render","es","HashRouter","src_App_0","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.161b37aa.chunk.js","sourcesContent":["const initialState = {\r\n    pokemons: '',\r\n    filtered: null,\r\n    singlePokemon: '',\r\n    loading: true,\r\n    isClicked: false,\r\n    pokemonsPerPage: 30,\r\n    min: 0,\r\n    max: 30,\r\n    showHideFilter: false\r\n};\r\n\r\nexport const reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case 'SET_POKEMONS':\r\n            {\r\n                const pokemons = [];\r\n                action.pokemons.results.forEach(pokemon => pokemons.push(pokemon))\r\n                return { ...state, pokemons, min: 0, max: 30 }\r\n            }\r\n\r\n        case 'SET_FILTERED':\r\n            {\r\n                const filtered = [];\r\n                action.filtered.results.forEach(pokemon => filtered.push(pokemon))\r\n                return { ...state, filtered }\r\n            }\r\n\r\n        case 'SET_POKEMONS_BY_COLOR':\r\n            const pokemonFilteredArr = [];\r\n            action.pokemons.pokemon_species.forEach(pokemon => pokemonFilteredArr.push(pokemon))\r\n            return { ...state, pokemons: pokemonFilteredArr, min: 0, max: 30 }\r\n\r\n        case 'SHOW_ALL_POKEMON':\r\n            return { ...state, filtered: null, min: 0, max: 30 }\r\n\r\n        case 'SET_SINGLE_POKEMON':\r\n            return { ...state, singlePokemon: action.pokemon }\r\n\r\n        case 'FETCH_START':\r\n            return { ...state, loading: true }\r\n\r\n        case 'FETCH_SUCCESS':\r\n            return { ...state, loading: false }\r\n\r\n        case 'FETCH_FAIL':\r\n            return { ...state, loading: true }\r\n\r\n        case 'CLICKED':\r\n            return { ...state, isClicked: !state.isClicked }\r\n\r\n        case 'CHANGE_PAGE':\r\n            return { ...state, min: action.min, max: action.max }\r\n\r\n        case 'PREVIOUS_PAGE':\r\n            return { ...state, min: state.min - 30, max: state.max - 30 }\r\n\r\n        case 'NEXT_PAGE':\r\n            return { ...state, min: state.min + 30, max: state.max + 30 }\r\n\r\n        case 'SEARCH_BY_NAME':\r\n            {\r\n                const pokemons = [...state.filtered].filter(pokemon => pokemon.name.toLowerCase().includes(action.letter.toLowerCase()))\r\n                return { ...state, pokemons, min: 0, max: 30 }\r\n            }\r\n\r\n        case 'SHOW_FILTER':\r\n                return { ...state, showHideFilter: !state.showHideFilter }\r\n\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const setPokemons = pokemons => ({\r\n    type: 'SET_POKEMONS',\r\n    pokemons\r\n})\r\n\r\nexport const setFiltered = filtered => ({\r\n    type: 'SET_FILTERED',\r\n    filtered\r\n})\r\n\r\nexport const setPokemonsByColor = pokemons => ({\r\n    type: 'SET_POKEMONS_BY_COLOR',\r\n    pokemons\r\n})\r\n\r\nexport const showAllPokemons = () => ({\r\n    type: 'SHOW_ALL_POKEMON',\r\n})\r\n\r\nexport const setSinglePokemon = pokemon => ({\r\n    type: 'SET_SINGLE_POKEMON',\r\n    pokemon\r\n})\r\n\r\nexport const fetchStart = () => ({\r\n    type: 'FETCH_START'\r\n})\r\n\r\nexport const fetchSuccess = () => ({\r\n    type: 'FETCH_SUCCESS'\r\n})\r\n\r\nexport const fetchFail = () => ({\r\n    type: 'FETCH_FAIL'\r\n})\r\n\r\nexport const clicked = () => ({\r\n    type: 'CLICKED'\r\n})\r\n\r\nexport const changePage = (min, max) => ({\r\n    type: 'CHANGE_PAGE',\r\n    min,\r\n    max\r\n})\r\n\r\nexport const previousPage = () => ({\r\n    type: 'PREVIOUS_PAGE'\r\n})\r\n\r\nexport const nextPage = () => ({\r\n    type: 'NEXT_PAGE'\r\n})\r\n\r\nexport const searchByName = (letter) => ({\r\n    type: 'SEARCH_BY_NAME',\r\n    letter,\r\n})\r\n\r\nexport const showHideFilter = () => ({\r\n    type: 'SHOW_FILTER'\r\n})\r\n\r\nexport const fetchPokemons = (offset) => dispatch => {\r\n    dispatch(fetchStart());\r\n    return fetch(`https://pokeapi.co/api/v2/pokemon/?offset=${offset}&limit=950`)\r\n        .then(res => res.json())\r\n        .then(json => {\r\n            dispatch(fetchSuccess())\r\n            dispatch(setPokemons(json))\r\n            dispatch(setFiltered(json))\r\n        })\r\n        .catch(e => dispatch(fetchFail(e)))\r\n}\r\n\r\nexport const fetchSinglePokemon = (id) => dispatch => {\r\n    dispatch(fetchStart());\r\n    return fetch(`https://cors-anywhere.herokuapp.com/https://pokeapi.co/api/v2/pokemon/${id}`)\r\n        .then(res => res.json())\r\n        .then(json => {\r\n            dispatch(fetchSuccess())\r\n            dispatch(setSinglePokemon(json))\r\n        })\r\n        .catch(e => dispatch(fetchFail(e)))\r\n}\r\n\r\nexport const fetchPokemonsByColor = (id) => dispatch => {\r\n    dispatch(fetchStart());\r\n    return fetch(`https://cors-anywhere.herokuapp.com/https://pokeapi.co/api/v2/pokemon-color/${id}/`)\r\n        .then(res => res.json())\r\n        .then(json => {\r\n            dispatch(fetchSuccess())\r\n            dispatch(setPokemonsByColor(json))\r\n\r\n        })\r\n        .catch(e => dispatch(fetchFail(e)))\r\n}\r\n","export const openBallStyles = {\r\n    transition: \"all 1s\",\r\n    minHeight: \"15vh\",\r\n}\r\n\r\nexport const closeBallStyles = {\r\n    transition: \"all 1s\",\r\n    minHeight: \"calc(50vh - 10px)\",\r\n}\r\n\r\nexport const openPokemonStyle = {\r\n    visibility: 'visible',\r\n    opacity: '1',\r\n    transition: 'visibility 0s linear 0s, opacity 300ms',\r\n    margin: '60px auto',\r\n}\r\n\r\nexport const closePokemonStyle = {\r\n    visibility: 'hidden',\r\n    opacity: '0',\r\n    transition: 'visibility 0s linear 500ms, opacity 300ms',\r\n    margin: '0',\r\n    padding: '0',\r\n    height: '0'\r\n}\r\n\r\nexport const showPokemonDetails = {\r\n    padding: '20px',\r\n    margin: '0 20px',\r\n}\r\n\r\nexport const hidePokemonDetails = {\r\n    border: 'none',\r\n    padding: '0',\r\n    margin: '0',\r\n}\r\n\r\nexport const showBtn = {\r\n    display: \"inline-block\"\r\n}\r\n\r\nexport const hideBtn = {\r\n    display: \"none\"\r\n}","import React, { Component } from 'react';\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { openBallStyles, closeBallStyles  } from \"../shared/animationStyle\";\r\nimport \"./Footer.css\"\r\n\r\nclass Footer extends Component {\r\n    render() {\r\n        return (\r\n            <footer style={this.props.isClicked ? openBallStyles : closeBallStyles}>\r\n                <small style={this.props.isClicked ? { display: \"block\" } : { display: \"none\" }}>Copyright &copy; Emil Bisak 2018</small>\r\n            </footer>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        isClicked: state.isClicked\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Footer);","import React, { Component } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { clicked, fetchPokemons } from \"../store/index\";\r\nimport './Header.css';\r\nimport { openBallStyles, closeBallStyles } from \"../shared/animationStyle\"\r\n\r\nclass Header extends Component {\r\n    render() {\r\n        const { isClicked, clicked, fetchPokemons, pokemons } = this.props\r\n\r\n        return (\r\n            <header className=\"App-header\" style={isClicked ? openBallStyles : closeBallStyles}>\r\n                <Link to=\"/\" onClick={pokemons.length !== 949 ? fetchPokemons : null} replace>\r\n                    <h1\r\n                        style={\r\n                            isClicked\r\n                                ? { transform: 'translateX(96%)' }\r\n                                : { transform: 'translateX(-50%)' }}>\r\n                        Pokemon App\r\n                    </h1>\r\n                </Link>\r\n                <div\r\n                    onClick={clicked}\r\n                    className=\"logo\"\r\n                    style={\r\n                        isClicked\r\n                            ? { animation: 'none' }\r\n                            : { animation: 'shadow-pulse 1.4s infinite' }}>\r\n                </div>\r\n            </header>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        isClicked: state.isClicked,\r\n        pokemons: state.pokemons,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    clicked,\r\n    fetchPokemons\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Header);","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from \"react-redux\";\r\n\r\nimport './SinglePokemon.css'\r\nimport { showPokemonDetails, hidePokemonDetails, openPokemonStyle, closePokemonStyle } from '../shared/animationStyle'\r\n\r\nclass SinglePokemon extends Component {\r\n\r\n    state = {\r\n        isClickedStat: false,\r\n        isClickedMove: false,\r\n        toggle: false,\r\n        imgUrl: 1,\r\n    }\r\n\r\n    showHide = (e) => {\r\n        let element = e.nativeEvent.path[0].getAttribute('datatype');\r\n\r\n        switch (element) {\r\n            case 'isClickedStat':\r\n                this.setState({ [element]: !this.state.isClickedStat })\r\n                break;\r\n            case 'isClickedMove':\r\n                this.setState({ [element]: !this.state.isClickedMove })\r\n                break;\r\n\r\n            default:\r\n                console.log(this.state);\r\n\r\n        }\r\n\r\n\r\n    }\r\n    render() {\r\n        const { isClicked, singlePokemon, loading } = this.props;\r\n        const { isClickedMove } = this.state;\r\n\r\n        if (!singlePokemon || loading) {\r\n            return <div className=\"wrapp single-pokemon\" style={isClicked ? { minHeight: 'calc(60vh)' } : { minHeight: '0' }}>\r\n                <div className=\"container single-pokemon\" style={isClicked ? openPokemonStyle : closePokemonStyle}>\r\n                    <img src=\"assets/icons/loading.gif\" alt=\"loading\" />\r\n                    <h4>Loading...</h4>\r\n                    <Link to=\"/\"><h2>Select pokemon</h2></Link>\r\n                </div>\r\n            </div>\r\n        }\r\n\r\n        const grabPokemonImages = () => {\r\n            let images = [];\r\n            for (let img in singlePokemon.sprites) {\r\n                if (singlePokemon.sprites.hasOwnProperty(img)) {\r\n                    if (img === \"front_default\" || img === \"back_default\")\r\n                        images.push(singlePokemon.sprites[img]);\r\n                }\r\n            }\r\n            images = images.filter(img => img !== null);\r\n            return images\r\n\r\n        }\r\n\r\n        let pokemonImages = grabPokemonImages();\r\n\r\n        const changeImgBc = () => {\r\n            this.setState({ imgUrl: 0 })\r\n        }\r\n        const changeImgFr = () => {\r\n            pokemonImages.length > 0 ? this.setState({ imgUrl: 1 }) : this.setState({ imgUrl: 0 })\r\n        }\r\n\r\n        const matchPercentage = (stat) => {\r\n            let max = 0;\r\n            switch (stat.stat.name) {\r\n                case \"speed\":\r\n                    max = 160;\r\n                    break;\r\n\r\n                case \"special-defense\":\r\n                    max = 230;\r\n                    break;\r\n\r\n                case \"special-attack\":\r\n                    max = 173;\r\n                    break;\r\n\r\n                case \"defense\":\r\n                    max = 230;\r\n                    break;\r\n\r\n                case \"attack\":\r\n                    max = 181;\r\n                    break;\r\n\r\n                case \"hp\":\r\n                    max = 255;\r\n                    break;\r\n\r\n                default:\r\n                    max = 0;\r\n                    break;\r\n            }\r\n\r\n            let perc = stat.base_stat / max * 100;\r\n\r\n            return [perc, max]\r\n        }\r\n\r\n\r\n        const typeJsx = singlePokemon.types.map((type, i) => {\r\n            return <img key={type.type.name + i} title={type.type.name} src={`assets/types/${type.type.name}.png`} alt=\"type\" className=\"pokemon-types\" />\r\n        })\r\n\r\n        const statsJsx = singlePokemon.stats.map(stat => {\r\n            return (\r\n                <div key={stat.stat.name} className=\"stat-wrapper\">\r\n                    <div className=\"stat-holder\">\r\n                        <span>{stat.stat.name}:</span>\r\n                        <div className=\"progress\">\r\n                            <div className=\"progress-bar\" style={{ width: `${matchPercentage(stat)[0]}%` }}>\r\n                                <span className=\"stat-min-max\">0</span>\r\n                                <span>{stat.base_stat}</span>\r\n                                <span></span>\r\n                            </div>\r\n                            <span className=\"stat-min-max\">{matchPercentage(stat)[1]}</span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )\r\n        })\r\n\r\n        const movesJsx = singlePokemon.moves.map(move => {\r\n            let moveName = move.move.name\r\n            return <small key={moveName}>{moveName}, </small>\r\n        })\r\n\r\n\r\n        return (\r\n            <div className=\"wrapp single-pokemon\" style={isClicked ? { minHeight: 'calc(60vh)' } : { minHeight: '0' }}>\r\n                <div className=\"container single-pokemon\" style={isClicked ? openPokemonStyle : closePokemonStyle}>\r\n                    <h1>{singlePokemon.name}</h1>\r\n                    <div className=\"pokemon-image-holder\">\r\n                        <img src={pokemonImages.length > 1 ? pokemonImages[this.state.imgUrl] : pokemonImages} onMouseOver={changeImgBc} onMouseOut={changeImgFr} alt=\"sprite\" />\r\n                        <div>\r\n                            <h4>Type</h4>\r\n                            {typeJsx}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"pokemon-stats\">\r\n                        <div className=\"pokemon-stats-holder\">\r\n                            <div className=\"stat-wrapper\">\r\n                                <div className=\"stat-holder\">\r\n                                    <span>height:</span>\r\n                                    <div className=\"progress\">\r\n                                        <div className=\"progress-bar\" style={{ width: `${singlePokemon.height / 145 * 100}%` }}>\r\n                                            <span className=\"stat-min-max\">0</span>\r\n                                            <span>{singlePokemon.height}</span>\r\n                                            <span></span>\r\n                                        </div>\r\n                                        <span className=\"stat-min-max\">145</span>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"stat-wrapper\">\r\n                                <div className=\"stat-holder\">\r\n                                    <span>weight:</span>\r\n                                    <div className=\"progress\">\r\n                                        <div className=\"progress-bar\" style={{ width: `${singlePokemon.weight / 9999 * 100}%` }}>\r\n                                            <span className=\"stat-min-max\">0</span>\r\n                                            <span>{singlePokemon.weight}</span>\r\n                                            <span></span>\r\n                                        </div>\r\n                                        <span className=\"stat-min-max\">9999</span>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            {statsJsx}\r\n                        </div>\r\n                    </div>\r\n                    <h2 datatype=\"isClickedMove\" onClick={this.showHide}>\r\n                        moves\r\n                        <img\r\n                            src={isClickedMove ? 'assets/icons/expand-arrow.png' : 'assets/icons/expand-button.png'}\r\n                            alt='eye'\r\n                            onClick={this.showHide}\r\n                            datatype=\"isClickedMove\" />\r\n                    </h2>\r\n                    <div className=\"pokemon-moves-holder\" style={isClickedMove ? showPokemonDetails : hidePokemonDetails}>\r\n                        {isClickedMove ? movesJsx : null}\r\n                    </div>\r\n                    <Link to=\"/\"><h3 className=\"back-btn\">Back</h3></Link>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        isClicked: state.isClicked,\r\n        singlePokemon: state.singlePokemon,\r\n        loading: state.loading\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(SinglePokemon);\r\n\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport './Pokemons.css';\r\nimport { openPokemonStyle, closePokemonStyle, showBtn, hideBtn } from \"../shared/animationStyle\";\r\nimport { changePage, previousPage, nextPage } from \"../store/index\";\r\n\r\n\r\nclass Buttons extends Component {\r\n    state = {\r\n        isWindowTabletSize: window.innerWidth < 600,\r\n    }\r\n\r\n    componentDidMount() {\r\n        window.addEventListener(\"resize\", this.checkIsWindowTabletSize)\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener(\"resize\", this.checkIsWindowTabletSize)\r\n    }\r\n\r\n    checkIsWindowTabletSize = () => {\r\n        this.setState({isWindowTabletSize : window.innerWidth < 600})\r\n    }\r\n\r\n    render() {\r\n        const { pokemons, isClicked, pokemonsPerPage, min, max, changePage, previousPage, nextPage } = this.props\r\n        const numsOfPages = Math.ceil(pokemons.length / pokemonsPerPage);\r\n\r\n        const makeButtons = (isWindowTabletSize) => {\r\n            const buttonsJsx = [];\r\n            for (let index = 1; index < numsOfPages + 1; index++) {\r\n                let nextMin = (index - 1) * pokemonsPerPage;\r\n                let nextMax = index * pokemonsPerPage;\r\n                let otherPage = nextMin !== min;\r\n                let currentPage = nextMin === min;\r\n\r\n                buttonsJsx\r\n                    .push(\r\n                        <span\r\n                            className={\r\n                                isWindowTabletSize && otherPage\r\n                                    ? \"pagination-btns hide\"\r\n                                    : \"pagination-btns\"}\r\n                            key={nextMin}\r\n                            onClick={() => changePage(nextMin, nextMax)}\r\n                            style={\r\n                                currentPage\r\n                                    ? { backgroundColor: \"#C32025\", color: \"rgb(215, 215, 215)\" }\r\n                                    : { backgroundColor: \"#fff\" }}>\r\n                            {index}\r\n                        </span>)\r\n\r\n            }\r\n            return buttonsJsx;\r\n        }\r\n\r\n        const showBtns = (isWindowTabletSize) => {\r\n            let btns = {};\r\n            if (min < 300) {\r\n                btns = {\r\n                    numberBtns: makeButtons(isWindowTabletSize).filter((btn, i) => i <= 9),\r\n                    nextTenPagesMin: 300,\r\n                    nextTenPagesMax: 330,\r\n                    previousTenPagesMin: min,\r\n                    previousTenPagesMax: max,\r\n                    nextText: \"11-19 \",\r\n                    previousText: \"\"\r\n                }\r\n                return btns\r\n            } else if (min >= 300 && min < 570) {\r\n                btns = {\r\n                    numberBtns: makeButtons(isWindowTabletSize).filter((btn, i) => i > 9 && i < 19),\r\n                    nextTenPagesMin: 570,\r\n                    nextTenPagesMax: 600,\r\n                    previousTenPagesMin: 0,\r\n                    previousTenPagesMax: 30,\r\n                    nextText: \"20-29 \",\r\n                    previousText: \" 1-10\"\r\n                }\r\n                return btns\r\n            } else if (min >= 570 && min < 870) {\r\n                btns = {\r\n                    numberBtns: makeButtons(isWindowTabletSize).filter((btn, i) => i >= 19 && i < 29),\r\n                    nextTenPagesMin: 870,\r\n                    nextTenPagesMax: 900,\r\n                    previousTenPagesMin: 300,\r\n                    previousTenPagesMax: 330,\r\n                    nextText: \"30-31 \",\r\n                    previousText: \" 11-19\"\r\n                }\r\n                return btns\r\n            } else {\r\n                btns = {\r\n                    numberBtns: makeButtons(isWindowTabletSize).filter((btn, i) => i >= 29),\r\n                    nextTenPagesMin: 900,\r\n                    nextTenPagesMax: 930,\r\n                    previousTenPagesMin: 570,\r\n                    previousTenPagesMax: 600,\r\n                    nextText: \"\",\r\n                    previousText: \" 20-29\"\r\n                }\r\n                return btns\r\n            }\r\n        }\r\n\r\n        return (\r\n            <div className=\"buttons-holder\" style={isClicked ? openPokemonStyle : closePokemonStyle}>\r\n                <span\r\n                    className=\"pagination-btns change-ten-pages\"\r\n                    onClick={() => changePage(showBtns(this.state.isWindowTabletSize).previousTenPagesMin, showBtns(this.state.isWindowTabletSize).previousTenPagesMax)}\r\n                    style={!showBtns(this.state.isWindowTabletSize).previousText ? hideBtn : showBtn}>&#171;{showBtns(this.state.isWindowTabletSize).previousText}\r\n                </span>\r\n\r\n                <span\r\n                    className=\"pagination-btns\"\r\n                    onClick={previousPage}\r\n                    style={!min ? hideBtn : showBtn}>&#171;\r\n                </span>\r\n\r\n                {showBtns(this.state.isWindowTabletSize).numberBtns}\r\n\r\n                <span\r\n                    className=\"pagination-btns\"\r\n                    onClick={nextPage}\r\n                    style={max >= pokemons.length\r\n                        ? hideBtn\r\n                        : showBtn}>&#187;\r\n                </span>\r\n\r\n                <span\r\n                    className=\"pagination-btns change-ten-pages\"\r\n                    onClick={() => changePage(showBtns(this.state.isWindowTabletSize).nextTenPagesMin, showBtns(this.state.isWindowTabletSize).nextTenPagesMax)}\r\n                    style={!showBtns(this.state.isWindowTabletSize).nextText || pokemons.length < 300 ? hideBtn : showBtn}>{showBtns(this.state.isWindowTabletSize).nextText}&#187;\r\n                </span>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        isClicked: state.isClicked,\r\n        pokemons: state.pokemons,\r\n        pokemonsPerPage: state.pokemonsPerPage,\r\n        min: state.min,\r\n        max: state.max\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    changePage,\r\n    previousPage,\r\n    nextPage\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Buttons);","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport './Pokemons.css';\r\nimport { openPokemonStyle, closePokemonStyle, showBtn, hideBtn } from \"../shared/animationStyle\";\r\nimport { fetchSinglePokemon, fetchPokemons, fetchPokemonsByColor, searchByName } from \"../store/index\";\r\nimport Buttons from \"./Buttons\";\r\n\r\n\r\n\r\n\r\nclass Pokemons extends Component {\r\n\r\n    render() {\r\n\r\n        const { pokemons, loading, isClicked, min, max, fetchSinglePokemon, fetchPokemons, fetchPokemonsByColor, searchByName } = this.props\r\n\r\n        if (!pokemons || loading) {\r\n            return <div className=\"wrapp single-pokemon\" style={isClicked ? { minHeight: 'calc(60vh)' } : { minHeight: '0' }}>\r\n                <div className=\"container single-pokemon\" style={isClicked ? openPokemonStyle : closePokemonStyle}>\r\n                    <img src=\"assets/icons/loading.gif\" alt=\"loading\" />\r\n                    <h4>Loading...</h4>\r\n                </div>\r\n            </div>\r\n        }\r\n\r\n        const makeColorBtns = () => {\r\n            const pokemonColors = [null, \"black\", \"blue\", \"brown\", \"gray\", \"green\", \"pink\", \"purple\", \"red\", \"white\", \"yellow\"]\r\n            let colorBtnsJsx = []\r\n\r\n            pokemonColors.forEach((color, i) => {\r\n                if (color) {\r\n                    colorBtnsJsx.push(<span key={color} className=\"color-btns\" style={{ background: `${color}` }} onClick={() => fetchPokemonsByColor(i)}></span>)\r\n                }\r\n            })\r\n\r\n            return colorBtnsJsx;\r\n        }\r\n\r\n\r\n\r\n\r\n        const pokemonsJsx = pokemons\r\n            .filter((pokemon, i) => i >= min && i < max)\r\n            .map((pokemon, i) => (\r\n                <Link key={pokemon.url.split(\"/\")[6]} to={{ pathname: `/pokemon/${pokemon.name}` }}>\r\n                    <div className=\"pokemon-wrapper\" onClick={() => fetchSinglePokemon(pokemon.url.split(\"/\")[6])}>\r\n                        <h2>{pokemon.name}</h2>\r\n                        <img src={`assets/pokemon/${pokemon.url.split(\"/\")[6] < 10090 ? pokemon.url.split(\"/\")[6] : 'egg'}.png`} alt=\"pokemon\" />\r\n                    </div>\r\n                </Link>\r\n            ))\r\n\r\n\r\n        return (\r\n            <div className=\"wrapp\" style={isClicked ? { minHeight: 'calc(140vh)' } : { minHeight: '0' }}>\r\n                <div className=\"container\">\r\n                    <input\r\n                        type=\"text\"\r\n                        placeholder=\"Search pokemon by name\"\r\n                        className=\"search-input\"\r\n                        onChange={(e) => searchByName(e.target.value)}\r\n                        style={isClicked ? showBtn : hideBtn}\r\n                    />\r\n                    <div className=\"filter\">\r\n                        <div className=\"filter-by-color clearfix\" style={isClicked ? showBtn : hideBtn}>\r\n                            <h4>Filter Pokemons by color</h4>\r\n                            <div className=\"color-btns-holder\">\r\n                                <div className=\"color-btns-wrapper\">\r\n                                    {makeColorBtns()}\r\n                                </div>\r\n                                <div className=\"all-colors-holder\">\r\n                                    <div className=\"all-colors\" onClick={fetchPokemons}></div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"pokemon-holder\" style={isClicked ? openPokemonStyle : closePokemonStyle}>\r\n                        {pokemonsJsx}\r\n                    </div>\r\n                    <Buttons />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        pokemons: state.pokemons,\r\n        loading: state.loading,\r\n        isClicked: state.isClicked,\r\n        min: state.min,\r\n        max: state.max\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    fetchSinglePokemon,\r\n    fetchPokemonsByColor,\r\n    fetchPokemons,\r\n    searchByName\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Pokemons);","import React from \"react\";\r\nimport { Switch, Route } from \"react-router-dom\";\r\nimport SinglePokemon from \"./SinglePokemon\";\r\nimport Pokemons from \"./Pokemons\";\r\n\r\n\r\nconst Main = () => (\r\n  <main>\r\n    <Switch>\r\n      <Route exact path=\"/\" component={Pokemons} />\r\n      <Route path=\"/pokemon/:name\" component={SinglePokemon} />\r\n    </Switch>\r\n  </main>\r\n);\r\n\r\nexport default Main;","import React, { Component } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter } from \"react-router\";\r\n\r\nimport './App.css';\r\nimport { fetchPokemons } from \"./store/index\";\r\nimport Footer from './components/Footer';\r\nimport Header from './components/Header';\r\nimport Main from './components/Main';\r\n\r\nconst root = document.querySelector('#root');\r\n\r\n\r\nclass App extends Component {\r\n\r\n  componentDidMount() {\r\n    this.props.fetchPokemons(0);\r\n  }\r\n\r\n  render() {\r\n    this.props.isClicked ? root.style.overflow = 'unset' : root.style.overflow = 'hidden';\r\n    return (\r\n      <div className=\"App\">\r\n        <Header />\r\n        <Main />\r\n        <Footer />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    isClicked: state.isClicked\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  fetchPokemons\r\n};\r\n\r\nexport default\r\n  withRouter(connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n  )(App))\r\n\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { HashRouter as Router } from \"react-router-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport { createStore, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nimport { reducer } from \"./store/index\";\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nconst store = createStore(reducer, applyMiddleware(thunk));\r\n// store.subscribe(() => console.log(store.getState()));\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <Router>\r\n            <App />\r\n        </Router>\r\n    </Provider>\r\n\r\n    , document.getElementById('root'));\r\n\r\n\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}